/* Style the HTML elements according to the following instructions. 
DO NOT ALTER THE EXISTING HTML TO DO THIS.  WRITE ONLY CSS!
/* Give the <body> element a background of #bdc3c7*/
/* ! Make the <h1> element #9b59b6*/
/* ! Make all <h2> elements orange */
/* ! Make all <li> elements blue(pick your own hexadecimal blue)*/ 
/* ! Change the background on every paragraph to be yellow*/
/* ! Make all inputs have a 3px red border*/
/* ! Give everything with the class 'hello' a white background*/
/* ! Give the element with id 'special' a 2px solid blue border(pick your own rgb blue)*/
/* ! Make all the <p>'s that are nested inside of divs 25px font(font-size: 25px)*/
/* ! Make only inputs with type 'text' have a gray background*/
/* X Give both <p>'s inside the 3rd <div> a pink background*/
/* X Give the 2nd <p> inside the 3rd <div> a 5px white border*/
/* X Make the <em> in the 3rd <div> element white and 20px font(font-size:20px)*/
/*BONUS CHALLENGES*/
/*You may need to research some other selectors and properties*/
/*Make all "checked" checkboxes have a left margin of 50px(margin-left: 50px)*/
/* Make the <label> elements all UPPERCASE without changing the HTML(definitely look this one up*/
/*Make the first letter of the element with id 'special' green and 100px font size(font-size: 100)*/
/*Make the <h1> element's color change to blue when hovered over */
/*Make the <a> element's that have been visited gray */

body{

    background-color: #bdc3c7;
}


body h1{

    color: #9b59b6;
}


body h2{

    color: orange;

}

body li{

    color: blue;

}

body p{

    background-color: yellow;

}

input{

    border: 3px solid red;   

}

.hello{

    background-color: white;

}

#special{

    border: 2px solid blue;

}

div > p {

    font-size: 25px;

}

input[type="text"]{

    background-color: gray;

}

div:nth-child(3) h2{

    background-color: pink;   

}

div:nth-child(3) p:nth-child(1){

    border: 5px white;

}

div:nth-child(3) > p > em{

    font-size: 20px;
    color: white;

}

.newDiv p em{

    color: white;

}

/* FLEXBOX 

! Use display: flex; to turn a container into a flex-container and its items into flex-items.
! Use justify-content to set the main-axis alignment of flex-items. 
!? Use align-items to define the cross-axis alignment of flex-items.
! Use flex-direction to switch between columns and rows of flex-items.
! Use the row-reverse or column-reverse values to flip the flex-items' order.
! Use order to customize the order of individual elements.
Use align-self to vertically align individual flex-items.
Use flex-grow, -shrink, and -basis (or the "flex" property, which is shorthand for those three) to create flexible boxes that can stretch and shrink.

*/

.container, .container2, .container3{

    /*Use display: flex; to turn a container into a flex-container and its items into flex-items.*/
    display: flex;

    background-color: orange;
    margin: 25px 25px 25px 25px;


}

.container{
    /* Use justify-content to set the main-axis alignment of flex-items. */
    justify-content: flex-end;
   

}

.container2{

    /*Use align-items to define the cross-axis alignment of flex-items.*/
    align-items:flex-end;

}

.container2 .box2{

    /*Use order to customize the order of individual elements.*/

}

.container3{

    /*Use flex-direction to switch between columns and rows of flex-items.*/
    flex-direction: column;

    /*Use the row-reverse or column-reverse values to flip the flex-items' order.*/
    flex-direction: column-reverse;

}

.box{

    background-color: red;
    height: 100px;
    width: 100px;
    margin: 50px 20px 5px 10px;

}

.box:hover{

    background-color: blue;

}
